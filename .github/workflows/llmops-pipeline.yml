name: LLMOps Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      IMAGE_NAME: fastapi-app
      DOCKER_HUB_USER: bowen1997
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .

      - name: Tag Docker image
        run: |
          docker tag $IMAGE_NAME:latest $DOCKER_HUB_USER/$IMAGE_NAME:latest

      - name: Push Docker image
        run: |
          docker push $DOCKER_HUB_USER/$IMAGE_NAME:latest
  lint-k8s:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Homebrew
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl file git
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.profile
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

      - name: Install kube-score
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install kube-score

      - name: Run kube-score on manifests
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          kube-score score deployment.yml --output-format ci > kube-score-deployment.txt
          kube-score score service.yml --output-format ci > kube-score-service.txt

  scan-image:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_HUB_USER }}/fastapi-app:latest
          format: table
          exit-code: 0 # fail if vulnerabilities are found
          severity: HIGH,CRITICAL
          scan-type: image
          timeout: 10m

  deploy-k8s:
    runs-on: ubuntu-latest
    needs: scan-image
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Create KinD cluster
        uses: helm/kind-action@v1.8.0

      - name: Set KUBECONFIG for KinD
        run: echo "KUBECONFIG=$(kind get kubeconfig-path)" >> $GITHUB_ENV

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy manifests to KinD
        run: |
          kubectl apply -f deployment.yml --validate=false
          kubectl apply -f service.yml --validate=false



